# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  - 'master-bytelight'
  - 'azure-pipelines'

pool:
  vmImage: 'ubuntu-latest'

variables:
  imageName: 'cf-oauth-proxy-docker'
  tag: 'connected-facilities'

services:
  neuvector: neuvector

steps:
  - checkout: 'self'
    # readme: https://docs.microsoft.com/en-us/azure/devops/pipelines/scripts/git-commands?view=azure-devops&tabs=yaml
    persistCredentials: true
    condition: and(succeeded(), ne(variables['Build.SourceVersionMessage'], 'automated update of semver on git commit'))
  - task: 'AzureCLI@2'
    condition: and(succeeded(), ne(variables['Build.SourceVersionMessage'], 'automated update of semver on git commit'))
    displayName: 'Static Analysis of Software'
    inputs:
      azureSubscription: 'cf-dev-az-service-connection'
      scriptType: 'bash'
      scriptLocation: 'scriptPath'
      scriptPath: './ci/recipes/sast.sh'
  - task: 'Docker@2'
    condition: and(succeeded(), ne(variables['Build.SourceVersionMessage'], 'automated update of semver on git commit'))
    displayName: 'Build and push cf-oauth-proxy-docker docker container'
    inputs:
      repository: '$(imageName)'
      command: 'buildAndPush'
      Dockerfile: 'Dockerfile'
      containerRegistry: 'cf-dev-acr-service-connection'
      tags: |
        $(tag)
  - task: 'Docker@2'
    condition: and(succeeded(), ne(variables['Build.SourceVersionMessage'], 'automated update of semver on git commit'))
    displayName: 'Login to ACR for Dev registry'
    inputs:
      command: 'login'
      containerRegistry: 'cf-dev-acr-service-connection'
  - task: 'DownloadSecureFile@1'
    condition: and(succeeded(), ne(variables['Build.SourceVersionMessage'], 'automated update of semver on git commit'))
    name: neuvectorLicense
    displayName: Get NeuVector license
    inputs:
      secureFile: 'neuvector-license.txt'
  - task: 'NeuVectorScan@1'
    condition: and(succeeded(), ne(variables['Build.SourceVersionMessage'], 'automated update of semver on git commit'))
    displayName: 'Scan image with NeuVector'
    inputs:
      controllerType: local
      controllerPort: 10443
      controllerLicense: '$(neuvectorLicense.secureFilePath)'
      containerRegistry: ''
      repository: cfdevregistry.azurecr.io/$(imageName)
      tag: $(tag)
      tags: $(tag)
      failOnHighSeverityThreshold: true
      highSeverityThreshold: '1'
      failOnMediumSeverityThreshold: true
      mediumSeverityThreshold: '2'
  - task: Bash@3
    condition: and(succeeded(), ne(variables['Build.SourceVersionMessage'], 'automated update of semver on git commit'))
    displayName: 'Scan Source and Docker Image with Synopsys Detect'
    inputs:
      targetType: 'inline'
      script: >
        bash <(curl -s -L https://detect.synopsys.com/detect.sh)
        --detect.blackduck.signature.scanner.individual.file.matching=ALL
        --detect.blackduck.signature.scanner.dry.run=false
        --blackduck.api.token=$(BD_TOKEN)
        --blackduck.url="$(blackduckURL)"
        --detect.blackduck.signature.scanner.paths=$(Build.SourcesDirectory)
        --detect.blackduck.signature.scanner.exclusion.pattern.search.depth=100
        --detect.project.name=CF-$(Build.DefinitionName)
        --detect.project.version.name=$(Build.BuildNumber)
        --detect.docker.image=cfdevregistry.azurecr.io/$(imageName):$(tag)
      workingDirectory: '$(Build.SourcesDirectory)'
  - task: 'AzureCLI@2'
    condition: and(succeeded(), ne(variables['Build.SourceVersionMessage'], 'automated update of semver on git commit'))
    displayName: 'Bless Development artifacts'
    inputs:
      azureSubscription: 'cf-dev-az-service-connection'
      scriptType: 'bash'
      scriptLocation: 'scriptPath'
      scriptPath: './ci/recipes/bless_development_artifacts.sh'
      # inlineScript:
      # arguments
      # powerShellErrorActionPreference
      # addSpnToEnvironment
      # useGlobalConfig
      # workingDirectory
      # failOnStandardError
      # powerShellIgnoreLASTEXITCODE

resources:
  containers:
    - container: neuvector
      image: cfdevregistry.azurecr.io/neuvector/controller:latest
      endpoint: 'cf-dev-acr-service-connection'
      ports:
        - 18300:18300
        - 18301:18301
        - 18400:18400
        - 18401:18401
        - 10443:10443
      volumes:
        - /lib/modules:/lib/modules
        - /var/neuvector:/var/neuvector
        - /var/run/docker.sock:/var/run/docker.sock
        - /sys/fs/cgroup:/host/cgroup
        - /proc:/host/proc
      options: --pid=host --cap-add=SYS_ADMIN --cap-add=NET_ADMIN --cap-add=SYS_PTRACE --cap-add=IPC_LOCK --security-opt apparmor:unconfined --env CLUSTER_JOIN_ADDR=neuvector --env CTRL_SERVER_PORT=10443

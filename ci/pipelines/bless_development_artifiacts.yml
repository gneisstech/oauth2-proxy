# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  - 'master-bytelight'
  - 'azure-pipelines'

pool:
  vmImage: 'ubuntu-latest'

variables:
  imageName: 'cf-oauth-proxy-docker'
  tag: 'connected-facilities'

steps:
  - checkout: 'self'
    # readme: https://docs.microsoft.com/en-us/azure/devops/pipelines/scripts/git-commands?view=azure-devops&tabs=yaml
    persistCredentials: true
    condition: and(succeeded(), ne(variables['Build.SourceVersionMessage'], 'automated update of semver on git commit'))
  - task: 'AzureCLI@2'
    condition: and(succeeded(), ne(variables['Build.SourceVersionMessage'], 'automated update of semver on git commit'))
    displayName: 'Static Analysis of Software'
    inputs:
      azureSubscription: 'cf-dev-az-service-connection'
      scriptType: 'bash'
      scriptLocation: 'scriptPath'
      scriptPath: './ci/recipes/sast.sh'
  - task: 'Docker@2'
    condition: and(succeeded(), ne(variables['Build.SourceVersionMessage'], 'automated update of semver on git commit'))
    displayName: 'Build and push cf-oauth-proxy-docker docker container'
    inputs:
      repository: '$(imageName)'
      command: 'buildAndPush'
      Dockerfile: 'Dockerfile'
      containerRegistry: 'cf-dev-acr-service-connection'
      tags: |
        $(tag)
  - task: 'Docker@2'
    condition: and(succeeded(), ne(variables['Build.SourceVersionMessage'], 'automated update of semver on git commit'))
    displayName: 'Login to ACR for Dev registry'
    inputs:
      command: 'login'
      containerRegistry: 'cf-dev-acr-service-connection'
  - task: 'AzureCLI@2'
    condition: and(succeeded(), ne(variables['Build.SourceVersionMessage'], 'automated update of semver on git commit'))
    displayName: 'Bless Development artifacts'
    inputs:
      azureSubscription: 'cf-dev-az-service-connection'
      scriptType: 'bash'
      scriptLocation: 'scriptPath'
      scriptPath: './ci/recipes/bless_development_artifacts.sh'
      # inlineScript:
      # arguments
      # powerShellErrorActionPreference
      # addSpnToEnvironment
      # useGlobalConfig
      # workingDirectory
      # failOnStandardError
      # powerShellIgnoreLASTEXITCODE
